# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from protobufs import agent_pb2 as protobufs_dot_agent__pb2


class agentStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.create_agent = channel.unary_unary(
                '/agent/create_agent',
                request_serializer=protobufs_dot_agent__pb2.agent_query.SerializeToString,
                response_deserializer=protobufs_dot_agent__pb2.agent_state.FromString,
                )
        self.delete_agent = channel.unary_unary(
                '/agent/delete_agent',
                request_serializer=protobufs_dot_agent__pb2.agent_state.SerializeToString,
                response_deserializer=protobufs_dot_agent__pb2.empty.FromString,
                )
        self.get_agent_info = channel.unary_unary(
                '/agent/get_agent_info',
                request_serializer=protobufs_dot_agent__pb2.agent_state.SerializeToString,
                response_deserializer=protobufs_dot_agent__pb2.agent_info.FromString,
                )


class agentServicer(object):
    """Missing associated documentation comment in .proto file."""

    def create_agent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete_agent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def get_agent_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_agentServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'create_agent': grpc.unary_unary_rpc_method_handler(
                    servicer.create_agent,
                    request_deserializer=protobufs_dot_agent__pb2.agent_query.FromString,
                    response_serializer=protobufs_dot_agent__pb2.agent_state.SerializeToString,
            ),
            'delete_agent': grpc.unary_unary_rpc_method_handler(
                    servicer.delete_agent,
                    request_deserializer=protobufs_dot_agent__pb2.agent_state.FromString,
                    response_serializer=protobufs_dot_agent__pb2.empty.SerializeToString,
            ),
            'get_agent_info': grpc.unary_unary_rpc_method_handler(
                    servicer.get_agent_info,
                    request_deserializer=protobufs_dot_agent__pb2.agent_state.FromString,
                    response_serializer=protobufs_dot_agent__pb2.agent_info.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'agent', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class agent(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def create_agent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/agent/create_agent',
            protobufs_dot_agent__pb2.agent_query.SerializeToString,
            protobufs_dot_agent__pb2.agent_state.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete_agent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/agent/delete_agent',
            protobufs_dot_agent__pb2.agent_state.SerializeToString,
            protobufs_dot_agent__pb2.empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def get_agent_info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/agent/get_agent_info',
            protobufs_dot_agent__pb2.agent_state.SerializeToString,
            protobufs_dot_agent__pb2.agent_info.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
